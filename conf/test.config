/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/raredisease -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h'
    ]

    withName: 'ENSEMBLVEP.*' {
        container = { workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
        'https://depot.galaxyproject.org/singularity/ensembl-vep:110.0--pl5321h2a3209d_0' :
        'biocontainers/ensembl-vep:110.0--pl5321h2a3209d_0' }
    }
}

env {
    MPLCONFIGDIR="."
}

params {
    config_profile_name             = 'Test profile - default'
    config_profile_description      = 'Minimal test dataset to check pipeline function'

    igenomes_ignore                 = true
    mito_name                       = 'MT'
    pipelines_testdata_base_path    = 'https://raw.githubusercontent.com/nf-core/test-datasets/raredisease'

    skip_tools                      = 'fastp,gens,haplogrep3,peddy,germlinecnvcaller,qualimap,eklipse,ngsbits'
    skip_subworkflows               = "mt_annotation,mt_subsample,me_calling,me_annotation,sv_annotation"

    input                           = params.pipelines_testdata_base_path + '/testdata/samplesheet_fq_spring.csv'
    fasta                           = params.pipelines_testdata_base_path + '/reference/reference.fasta'
    fai                             = params.pipelines_testdata_base_path + '/reference/reference.fasta.fai'
    genome                          = 'GRCh37'
    gnomad_af                       = params.pipelines_testdata_base_path + '/reference/gnomad_reformated.tab.gz'
    intervals_wgs                   = params.pipelines_testdata_base_path + '/reference/target_wgs.interval_list'
    intervals_y                     = params.pipelines_testdata_base_path + '/reference/targetY.interval_list'
    known_dbsnp                     = params.pipelines_testdata_base_path + '/reference/dbsnp_-138-.vcf.gz'
    mobile_element_references       = params.pipelines_testdata_base_path + '/reference/mobile_element_references.tsv'
    mobile_element_svdb_annotations = params.pipelines_testdata_base_path + '/reference/svdb_querydb_files.csv'
    reduced_penetrance              = params.pipelines_testdata_base_path + '/reference/reduced_penetrance.tsv'
    score_config_mt                 = params.pipelines_testdata_base_path + '/reference/rank_model_snv.ini'
    score_config_snv                = params.pipelines_testdata_base_path + '/reference/rank_model_snv.ini'
    score_config_sv                 = params.pipelines_testdata_base_path + '/reference/rank_model_sv.ini'
    svdb_query_dbs                  = params.pipelines_testdata_base_path + '/reference/svdb_querydb_files.csv'
    target_bed                      = params.pipelines_testdata_base_path + '/reference/target.bed'
    variant_catalog                 = params.pipelines_testdata_base_path + '/reference/variant_catalog.json'
    vcfanno_lua                     = params.pipelines_testdata_base_path + '/reference/vcfanno_functions.lua'
    vcfanno_resources               = params.pipelines_testdata_base_path + '/reference/vcfanno_resources.txt'
    vcfanno_toml                    = params.pipelines_testdata_base_path + '/reference/vcfanno_config.toml'
    variant_consequences_snv        = params.pipelines_testdata_base_path + '/reference/variant_consequences_v2.txt'
    variant_consequences_sv         = params.pipelines_testdata_base_path + '/reference/variant_consequences_v2.txt'
    vep_cache                       = params.pipelines_testdata_base_path + '/reference/vep_cache_and_plugins.tar.gz'
    vep_filters                     = params.pipelines_testdata_base_path + '/reference/hgnc.txt'
    vep_cache_version               = 107
    vep_plugin_files                = params.pipelines_testdata_base_path + '/reference/vep_files.csv'

}
